@page "/hero"


    <style type="text/css">

        .heroes {
            margin: 0 0 2em 0;
            list-style-type: none;
            padding: 0;
            width: 15em;
        }

            .heroes li {
                cursor: pointer;
                position: relative;
                left: 0;
                background-color: #EEE;
                margin: .5em;
                padding: .3em 0;
                height: 1.6em;
                border-radius: 4px;
            }

                .heroes li:hover {
                    color: #607D8B;
                    background-color: #DDD;
                    left: .1em;
                }

                .heroes li.selected {
                    background-color: #CFD8DC;
                    color: white;
                }

                    .heroes li.selected:hover {
                        background-color: #BBD8DC;
                        color: white;
                    }

            .heroes .badge {
                display: inline-block;
                font-size: small;
                color: white;
                padding: 0.8em 0.7em 0 0.7em;
                background-color: #405061;
                line-height: 1em;
                position: relative;
                left: -1px;
                top: -4px;
                height: 1.8em;
                margin-right: .8em;
                border-radius: 4px 0 0 4px;
            }
    </style>

<h2>My Heroes</h2>
<ul class="heroes">
    @foreach (Hero hero in heroesList)
    {
        <li @onclick="@(e=>HeroSelected(hero.Id))"><span class="badge">@hero.Id</span> @hero.Name</li>
    }
</ul>

<h2>@hero.Name.ToUpper() Details</h2>
<div><span>id: </span>@hero.Id</div>
<div>
    <label>
        name:
        <input type="text" @bind-value="hero.Name" @bind-value:event="oninput" placeholder="name" />
    </label>
</div>


@code {

    Hero hero = new Hero()
    {
        Id = 0,
        Name = ""
    };

    public class Hero
    {
        public int Id { get; set; }
        public string Name { get; set; }
    }

    public void HeroSelected(int id)
    {
        var selectedHero = heroesList.FirstOrDefault(q => q.Id == id);
        if (hero != null)
            hero = selectedHero;
    }

    List<Hero> heroesList = new List<Hero>()
{
        new Hero(){ Id=1, Name="Test1"},
        new Hero(){ Id=2, Name="Test2"},
        new Hero(){ Id=3, Name="Test3"},
        new Hero(){ Id=4, Name="Test4"},
        new Hero(){ Id=5, Name="Test5"}
    };
}
