@page "/heroes"
@inject HeroService heroService
@inject MessageService messageService

    <style type="text/css">

        .heroes {
            margin: 0 0 2em 0;
            list-style-type: none;
            padding: 0;
            width: 15em;
        }

            .heroes li {
                cursor: pointer;
                position: relative;
                left: 0;
                background-color: #EEE;
                margin: .5em;
                padding: .3em 0;
                height: 1.6em;
                border-radius: 4px;
            }

                .heroes li:hover {
                    color: #607D8B;
                    background-color: #DDD;
                    left: .1em;
                }

                .heroes li.selected {
                    background-color: #CFD8DC;
                    color: white;
                }

                    .heroes li.selected:hover {
                        background-color: #BBD8DC;
                        color: white;
                    }

            .heroes .badge {
                display: inline-block;
                font-size: small;
                color: white;
                padding: 0.8em 0.7em 0 0.7em;
                background-color: #405061;
                line-height: 1em;
                position: relative;
                left: -1px;
                top: -4px;
                height: 1.8em;
                margin-right: .8em;
                border-radius: 4px 0 0 4px;
            }
    </style>

<h2>My Heroes</h2>
<ul class="heroes">
    @foreach (Hero hero in _heroesList)
    { <li>
            <a href="/HeroDetails/@hero.Id"><span class="badge">@hero.Id</span> @hero.Name</a>
      </li>
    }
</ul>

@code {

    private Hero _selectedHero = null;
    private List<Hero> _heroesList = new List<Hero>();

    public void HeroSelected(int id)
    {
        _selectedHero = _heroesList.FirstOrDefault(q => q.Id == id);
       // messageService.Messages.Add("HeroService: Selected hero id=" + id);
    }

    protected override async Task OnInitializedAsync()
    {
        _heroesList = await Task.FromResult(heroService.GetHeroes());
    }

 }
